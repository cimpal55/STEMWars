@page "/register"
@inject IAuthService _authService
@inject NavigationManager _navigationManager

<PageTitle>Register</PageTitle>

<h3 style ="padding: 20px;">Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration" style="padding-left: 20px;">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <div class="@messageCssClass">
        <span>@message</span>
    </div>
    <div class="mb-3" style="padding-top: 20px">
        <a href="" @onclick="@(()=>_navigationManager.NavigateTo(returnUrl))">Log in</a>
    </div>
</EditForm>

@code {
    UserRegister user = new();

    string message = string.Empty;
    string messageCssClass = string.Empty;
    string returnUrl = string.Empty;

    protected override void OnInitialized()
    {
        var uri = _navigationManager.ToAbsoluteUri(_navigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("returnUrl", out var url))
        {
            returnUrl = url;
        }
    }

    async Task HandleRegistration()
    {
        var result = await _authService.Register(user);
        message = result.Message;
        if (result.Success)
        {
            message = result.Message;
            messageCssClass = "text-success";
        }
        else
            messageCssClass = "text-danger";
    }
}
